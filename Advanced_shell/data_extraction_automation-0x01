#!/bin/bash
# Pokémon Data Formatter
# Output format: "Pikachu is of type Electric, weighs 6kg, and is 0.4m tall."

JSON_FILE="data.json"

# Validate JSON
if ! jq -e '.' "$JSON_FILE" >/dev/null 2>&1; then
    echo "Error: Invalid JSON data" >&2
    exit 1
fi

# Extract and format data
formatted_output() {
    # Process name with sed (capitalize first letter)
    local name=$(jq -r '.name' "$JSON_FILE" | sed 's/^./\u&/')
    
    # Process height with awk (1 decimal place)
    local height=$(jq -r '.height/10' "$JSON_FILE" | awk '{printf "%.1f", $0}')
    
    # Process weight with awk (whole number)
    local weight=$(jq -r '.weight/10' "$JSON_FILE" | awk '{printf "%d", $0}')
    
    # Process type with sed (capitalize first letter)
    local type=$(jq -r '.types[0].type.name' "$JSON_FILE" | sed 's/^./\u&/')

    # Verify complete data
    if [[ -z "$name" || -z "$height" || -z "$weight" || -z "$type" ]]; then
        echo "Error: Incomplete Pokémon data" >&2
        exit 1
    fi

    # Generate exact required output
    echo "${name} is of type ${type}, weighs ${weight}kg, and is ${height}m tall."
}

formatted_output